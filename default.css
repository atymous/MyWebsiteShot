:root {
    --mainBackground: #fdf8f5;
    --secondBackground: #e8cebf;
    --colorBorder: #c1c1c1;
    --boldText: olive;
    --lightText: #4b5156;

    --colorThemeDotBorder:#24292e;

    --openerTransparent: rgb(251, 249, 243, 0.8);
    --openerShadow: #ddaf94;
    --openerShadowBorder: #ddaf94;
    --contactBtnColor: olive;
}

html,
body {
    padding: 0;
    margin: 0;
}

/* '*' refers to all the child elements within body 
--> this way the transition is a lot smoother ! */
body *{
    transition: 0.3s;
}

h1,
h2,
h3,
h4,
h5,
h6,
strong {
    color: var(--boldText);
    font-family: 'Yeseva One', cursive;
    font-weight: 500;
}

p,
li,
span,
label,
input,
textarea {
    color: var(--lightText);
    font-family: 'Josefin Sans', sans-serif;
}

a{
    text-decoration: none;
    color: #17a2b8
}

ul{
    list-style:none;
}

h1 {font-size: 56px;}
h2 {font-size: 36px;}
h3 {font-size: 28px;}
h4 {font-size: 24px;}
h5 {font-size: 2px;}
h6 {font-size: 16px;}

.s1 {
    background-color: var(--mainBackground);
    border-bottom: 1px solid var(--colorBorder);
    overflow:auto; 
}

.s2 {
    background-color: var(--secondBackground);
    border-bottom: 1px solid var(--colorBorder);
    /* forgot to add, explained why background for s2 wasn't fully expanded */
    overflow: auto;
}

.main-container{
    width: 1200px;
    margin: 0 auto;
}

.greeting-wrapper{
    display: grid;
    text-align: center;
    align-content:center;
    min-height: 12em;
}

.intro-wrapper{
    background-color: var(--secondBackground);
    border:1px solid var(--colorBorder);
    border-radius: 5px 5px 0 0;

    -webkit-box-shadow: 0px 9px 12px 4px rgba(46,74,117,1);
    -moz-box-shadow: 0px 9px 12px 4px rgba(46,74,117,1);
    box-shadow: 0px 9px 12px 4px rgba(46,74,117,1);

    display: grid;
    grid-template-columns: 1fr 1fr;
        grid-template-areas: 
        'navi-wrapper navi-wrapper'
        'left-column right-column';
}

.navi-wrapper{
    border-radius: 5px 5px 0 0;
    grid-area: navi-wrapper;
    border-bottom: 1px solid var(--colorBorder);
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: var(--mainBackground);
}

/* want ot keep color consistent for navi link */
#navi a{
    color: var(--mainBackground);
}

#navi{
    margin: 0;
    padding: 10px;
}

#navi li{
    display: inline-block;
    margin-right: 5px;
    margin-left:5px;
}

.dots-wrapper{
    display: flex;
    padding: 11px;
}

.browser-dot{
    background-color: black;
    height: 15px;
    width: 15px;
    border-radius: 50%;
    margin: 5px;
    
}

#dot1{
    background-color: #FC6058;
}

#dot2{
    background-color: #FEC02F;
}

#dot3{
    background-color: #2ACA3E;
}

.left-column{
    grid-area: left-column;
    padding-top: 50px;
    padding-bottom: 50 ox;
}

#profilePict{
    display: block;
    margin: 0 auto;

    height: 200px;
    width: 200px;
    object-fit: cover;
    border: 2px solid var(--colorBorder);
    border-radius: 5px;
}

#color-theme-wrapper{
    display: flex;
    justify-content: center;
}

.color-theme-dot{
    height: 30px;
    width: 30px;
    border-radius: 50%;
    background-color: black;

    margin: 5px;
    border: 2px solid var(--colorThemeDotBorder);

    -webkit-box-shadow: 0px 9px 12px 4px rgba(46,74,117,1);
    -moz-box-shadow: 0px 9px 12px 4px rgba(46,74,117,1);
    box-shadow: 0px 9px 12px 4px rgba(46,74,117,1);

    cursor: pointer;
}

.color-theme-dot:hover{
    border-width: 5px;
}

#kawaii-feel{
    background-color: var(--secondBackground);
}

#egg-feel{
    background-color: #f1b24a;
}

#green-feel{
    background-color: #4d774e;
}
#night-feel{
    background-color: #2d545e;
}
/*
#alien-feel{
    background-color: #161748;
}
*/

#settings-note{
    font-size: 12px;
    font-style: italic;
    text-align: center;
}

.right-column{
    grid-area: right-column;
    display: grid;
    align-content: center;

    /* include padding when centering and decreasing screen size
    removes overflow with the intro box */
    padding-top: 50px;
    padding-bottom: 50px;
}

#opener-shadow{
    background-color: var(--openerShadow);
    max-width: 300px;
    height: 180px;
    padding-left: 30px;
    padding-top: 30px;
}

#opener{
    width: 300px;
    border: 1.5px solid var(--openerShadowBorder);
    background-color: var(--openerTransparent);
    padding: 15px;
    position: relative;
}

.corner{
    width:7px;
    height: 7px;
    border-radius: 50%;
    border: 1.5px solid #ddaf94;
    background-color: #fff;
    position: absolute;
}

#top-left{
    top: -5px;
    left: -5px;
}

#top-right{
    top: -5px;
    right: -5px;
}

#bottom-right{
    bottom: -5px;
    right: -5px;
}

#bottom-left{
    bottom: -5px;
    left: -5px;
}

/* first display grid so we can utilize the columns */
.about-me-wrapper{
    display: grid;
    /* repeat(atuto-fit, minmax(320px, 1fr))
    says, repeat this section here, autofit these sections
    and repeat once it starts reaching 320px (crushing), then
    naturally stack these items  */
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));

    /* adjust about-me section */
    padding-bottom: 50px;
    padding-top: 50px;

    /* create a gap*/
    gap: 100px;
}
/* display skills using flex to help align both skill boxes*/
#skills{
    display: flex;
    /* space-evenly both skill columns*/
    justify-content: space-evenly;
    background-color: var(--openerShadow);
}

/* use grid to align temporary image */
.personal-links{
    display: grid;
    align-content: center;
    text-align: center;
}

#temp-vid{
    width: 100%;
}

.project-wrapper{
    display: grid;
    grid-template-columns: repeat(auto-fit, 320px);
    /* want everything centered */
    gap: 20px;
    justify-content: center;

    /* add padding to bottom of wrapper so image is not incontact 
    with the bottom of wrapper */
    padding-bottom: 50px;
    font-size: 14px;
}

/* create a shadow behind boxes */
.proj{
    border: 1px solid var(--mainBackground);

    -webkit-box-shadow: 0px 9px 12px 4px rgba(46,74,117,1);
    -moz-box-shadow: 0px 9px 12px 4px rgba(46,74,117,1);
    box-shadow: 0px 9px 12px 4px rgba(46,74,117,1);
}

.proj-img{
    display: block;
    width: 100%;
    height: 180px;
    /* want to display as a block 
    need to fix the stretch of image by implementing a gap */
    object-fit: cover;
    /*image is less strecthed but not done*/
}

/* preview --> wrapper around text */
.preview{
    background-color: #fff;
    padding-top: 15px;
    padding-left: 10px;
    padding-bottom: 5px;
}

/* I don't want these colors to change when the user chooses their theme color */
.preview-title{
    color: var(--lightText);
    /* adjust the line height */
    margin: 0;
}

.preview-sum{
    color: #4b5156;
    font: 16px;
}

/* display the contact form */
#contact-form{
    display: block;
    max-width: 600px;
    margin: 0 auto;
    border: 1px solid var(--colorBorder);
    padding: 15px;
    border-radius: 5px;
    background-color: var(--openerShadow);
    margin-bottom: 50px;

}

/* trying to fix the wide border above "Get in Touch "
#git{
    background-color: var(--secondaryColor);
}
*/
/* need to align and create space/height for input fields */
#contact-form label{
    /* do this by creating line height */
    line-height: 2.7em;
}

/* make some more space for text area */
#contact-form textarea{
    min-height: 100px;
    font-size: 14px;
}

/* now align the actual ianput fields for the contact form */
.input-field{
    width: 100%;
    padding-top: 10px;
    padding-bottom: 10px;
    border-radius: 5px;
    font-size: 14px;
    background-color: var(--mainBackground);
    border: 1px solid var(--colorBorder);
}

#submit-btn{
    margin-top: 10px;
    width: 100%;
    padding-top: 10px;
    padding-bottom: 10px;
    color: #fff;
    background-color: var(--contactBtnColor);
    border: none;
}

@media screen and (max-width: 1200px){
    .main-container{
    width: 95%;
    }
}

/* utilize the grid template for the intro wrapper 
 I want the right column to go below the left column when
screen size is reached by altering column order */
@media screen and (max-width: 800px){
    .intro-wrapper{
        grid-template-columns: 1fr;
        grid-template-areas: 
        'navi-wrapper'
        'left-column'
        'right-column';
    }
/* .right-column already declared as a grid. */
    .right-column{
        justify-content: center;
    }
}
